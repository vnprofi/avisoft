name: Build Avito Seller Parser

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        python-version: ["3.11"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip & install build tools
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel

      - name: Install Python dependencies
        shell: bash
        run: |
          python -m pip install --no-cache-dir -r requirements.txt

      - name: Install Playwright browsers
        shell: bash
        run: |
          export PLAYWRIGHT_BROWSERS_PATH=ms-playwright
          python -m playwright install chromium
          ls -la ms-playwright/ || echo "Browser directory not found"

      - name: Verify dependencies
        shell: bash
        run: |
          python -c "
          import PyQt6, qasync, pandas, openpyxl, sys, platform, playwright
          print('Dependencies OK on', platform.system(), 'Python', sys.version)
          print('PyQt version:', PyQt6.QtCore.QT_VERSION_STR)
          try:
              print('Playwright version:', playwright.__version__)
          except AttributeError:
              print('Playwright installed (version check not available)')
          "

      - name: Test application import
        shell: bash
        run: |
          python -c "
          import sys
          sys.path.insert(0, 'src')
          try:
              import gui, parser
              print('Modules imported successfully')
          except Exception as e:
              print('Import error:', e)
              raise
          "

      - name: Build application with PyInstaller
        shell: bash
        run: |
          pyinstaller AvitoSellerParser.spec --clean --noconfirm
          ls -la dist/ || true

      - name: Create DMG from .app (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          set -e
          APP_PATH="dist/AvitoSellerParser.app"
          if [ -d "$APP_PATH" ]; then
            DMG_NAME="AvitoSellerParser-macOS.dmg"
            # Create a temporary folder structure
            mkdir -p dist/dmg_src
            cp -R "$APP_PATH" dist/dmg_src/
            hdiutil create -volname "AvitoSellerParser" -srcfolder dist/dmg_src -ov -format UDZO "dist/$DMG_NAME"
            echo "DMG created: dist/$DMG_NAME"
          else
            echo "Expected .app bundle not found: $APP_PATH"
            ls -la dist/
            exit 1
          fi

      - name: Test built executable (Windows)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          if [ -f "dist/AvitoSellerParser.exe" ]; then
            echo "✅ Windows executable built successfully"
            file dist/AvitoSellerParser.exe || echo "File command not available"
          else
            echo "❌ Windows executable not found"
            ls -la dist/
            exit 1
          fi

      - name: Test built bundle (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          if [ -d "dist/AvitoSellerParser.app" ]; then
            echo "✅ macOS app bundle built successfully"
            ls -la dist/AvitoSellerParser.app/Contents/MacOS/ || true
          elif [ -f "dist/AvitoSellerParser-macOS.dmg" ]; then
            echo "✅ macOS DMG built successfully"
            ls -la dist/AvitoSellerParser-macOS.dmg
          else
            echo "❌ macOS bundle not found"
            ls -la dist/
            exit 1
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: AvitoSellerParser-${{ matrix.os }}-py${{ matrix.python-version }}
          path: |
            dist/
          retention-days: 30

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ matrix.os }}-py${{ matrix.python-version }}
          path: |
            build/
            *.spec
            ms-playwright/
          retention-days: 7